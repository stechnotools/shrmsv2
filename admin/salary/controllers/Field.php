<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');use PhpOffice\PhpSpreadsheet\Spreadsheet;use PhpOffice\PhpSpreadsheet\Writer\Xlsx;class Field extends Admin_Controller {	private $error = array();	public function __construct(){		parent::__construct();		$this->load->model('field_model');		$this->load->model('employee/employee_model');				}	public function index(){      	$this->lang->load('field');		$this->template->set_meta_title($this->lang->line('heading_title'));		$this->getList();  	}	protected function search() {		$requestData= $_REQUEST;		$totalData = $this->field_model->getTotalFields();		$totalFiltered = $totalData;		$filter_data = array(			'filter_search'  => $requestData['search']['value'],			'order'  		 => $requestData['order'][0]['dir'],			'sort' 			 => $requestData['order'][0]['column'],			'start' 		 => $requestData['start'],			'limit' 		 => $requestData['length']		);		$totalFiltered = $this->field_model->getTotalFields($filter_data);		$filteredData = $this->field_model->getFields($filter_data);		//printr($filteredData);		$datatable=array();		foreach($filteredData as $result) {						$action  = '<div class="btn-group btn-group-sm pull-right">';			$action .= 		'<a class="btn btn-sm btn-primary" href="'.admin_url('salary/field/edit/'.$result->id).'"><i class="fa fa-pencil"></i></a>';			$action .=		'<a class="btn-sm btn btn-danger btn-remove" href="'.admin_url('salary/field/delete/'.$result->id).'" onclick="return confirm(\'Are you sure?\') ? true : false;"><i class="fa fa-trash-o"></i></a>';			$action .= '</div>';			$datatable[]=array(				'<input type="checkbox" name="selected[]" value="'.$result->id.'" />',				$result->name,				$result->type,				$result->status?'Yes':'No',				$action			);		}		//printr($datatable);		$json_data = array(			"draw"            => isset($requestData['draw']) ? intval( $requestData['draw'] ):1,			"recordsTotal"    => intval( $totalData ),			"recordsFiltered" => intval( $totalFiltered ),			"data"            => $datatable		);		$this->output		->set_content_type('application/json')		->set_output(json_encode($json_data));  // send data as json format	}	public function add(){		$this->lang->load('field');		$this->template->set_meta_title($this->lang->line('heading_title'));		if ($this->input->server('REQUEST_METHOD') === 'POST' && $this->validateForm()){				$userid=$this->field_model->addField($this->input->post());			$this->session->set_flashdata('message', 'field Saved Successfully.');			redirect(ADMIN_PATH.'/salary/field');		}		$this->getForm();	}	public function edit(){		$this->lang->load('field');		$this->template->set_meta_title($this->lang->line('heading_title'));		if ($this->input->server('REQUEST_METHOD') === 'POST'){				$user_id=$this->uri->segment(5);			$this->field_model->editField($user_id,$this->input->post());			$this->session->set_flashdata('message', 'field Updated Successfully.');			redirect(ADMIN_PATH.'/salary/field');		}		$this->getForm();	}	public function delete(){		if ($this->input->post('selected')){         $selected = $this->input->post('selected');      }else{         $selected = (array) $this->uri->segment(5);       }		$this->field_model->deleteField($selected);		$this->session->set_flashdata('message', 'field deleted Successfully.');		redirect(ADMIN_PATH.'/salary/field');	}	protected function getList() {		$data['breadcrumbs'] = array();		$data['breadcrumbs'][] = array(			'text' => $this->lang->line('heading_title'),			'href' => admin_url('field')		);		$this->template->add_package(array('datepicker','datatable'),true);		$data['add'] = admin_url('salary/field/add');		$data['delete'] = admin_url('salary/field/delete');		$data['datatable_url'] = admin_url('salary/field/search');		$data['field_sample']=base_url('storage/uploads/files/field-sample.xlsx');		$data['heading_title'] = $this->lang->line('heading_title');		$data['text_list'] = $this->lang->line('text_list');		$data['text_no_results'] = $this->lang->line('text_no_results');		$data['text_confirm'] = $this->lang->line('text_confirm');		$data['button_add'] = $this->lang->line('button_add');		$data['button_edit'] = $this->lang->line('button_edit');		$data['button_delete'] = $this->lang->line('button_delete');		if(isset($this->error['warning'])){			$data['error'] 	= $this->error['warning'];		}		if ($this->input->post('selected')) {			$data['selected'] = (array)$this->input->post('selected');		} else {			$data['selected'] = array();		}						$this->template->view('fields', $data);	}	protected function getForm(){		$data = array();		$data = $this->lang->load('field');		$this->template->add_package(array('ckeditor','ckfinder','colorbox','select2','datepicker','datatable'),true);		$data['breadcrumbs'] = array();		$data['breadcrumbs'][] = array(			'text' => $this->lang->line('heading_title'),			'href' => admin_url('salary/field')		);		//printr($_SESSION);		$_SESSION['isLoggedIn'] = true;		$data['heading_title'] 	= $this->lang->line('heading_title');		$data['text_form'] = $this->uri->segment(5) ? "field Edit" : "field Add";		$data['text_image'] =$this->lang->line('text_image');		$data['text_none'] = $this->lang->line('text_none');		$data['text_clear'] = $this->lang->line('text_clear');		$data['cancel'] = admin_url('salary/field');		$data['button_save'] = $this->lang->line('button_save');		$data['button_cancel'] = $this->lang->line('button_cancel');		if(isset($this->error['warning'])){			$data['error'] 	= $this->error['warning'];		}		if ($this->uri->segment(5) && ($this->input->server('REQUEST_METHOD') != 'POST')) {			$field = $this->field_model->getField($this->uri->segment(5));		}						//branch				//printr($data['shifts']);		foreach($this->field_model->getTableColumns() as $value) {			if($this->input->post($value)) {				$data[$value] = $this->input->post($value);			} else if(isset($field->{$value}) && $field->{$value}) {				$data[$value] = $field->{$value};			} else {				$data[$value] = '';			}		}								$this->template->view('fieldForm',$data);	}	protected function validateForm() {		$user_id=$this->uri->segment(4);		$regex = "(\/?([a-zA-Z0-9+\$_-]\.?)+)*\/?"; // Path      	$regex .= "(\?[a-zA-Z+&\$_.-][a-zA-Z0-9;:@&%=+\/\$_.-]*)?"; // GET Query      	$regex .= "(#[a-zA-Z_.-][a-zA-Z0-9+\$_.-]*)?"; // Anchor 		$rules=array(
			'name' => array(
				'field' => 'name', 
				'label' => 'name', 
				'rules' => 'trim|required|max_length[100]'
			),					);		$this->form_validation->set_rules($rules);		if ($this->form_validation->run() == TRUE)		{			return true;    	}		else		{			$this->error['warning']=$this->lang->line('error_warning');			return false;    	}		return !$this->error;	}	public function email_check($email, $user_id=''){		$field = $this->field_model->getEmployeeByEmail($email);      	if (!empty($field) && $field->id != $user_id){			$this->form_validation->set_message('email_check', "This email address is already in use.");         	return FALSE;		}else{         	return TRUE;      	}   	}	public function username_check($username, $user_id=''){      $field = $this->field_model->getEmployeeByUsername($username);      if (!empty($field) && $field->id != $user_id){            $this->form_validation->set_message('username_check', "This {field} provided is already in use.");            return FALSE;		}else{         return TRUE;      }   }	public function autocomplete(){		$json = array();		if (is_ajax()){			$filter_data = array(				'filter_search'  => $this->input->get('searchTerm'),				'start' 		 => 0,				'limit' 		 => 5			);			$filteredData = $this->field_model->getEmployees($filter_data);			//printr($filteredData);			foreach($filteredData as $result){				$json[] = array(					'id' => $result->id,					'text'    => $result->paycode,					'empname'    => $result->field_name,					'card_no' => $result->card_no,					'department_name'     => $result->department_name,				);			}			echo json_encode($json);		}else{         	return show_404();      	}	}	public function upload(){		$json=array();		$month=$this->input->post('month');		$this->load->library('upload');		$this->load->model('users/users_model');		$configmain = array(			'allowed_types' => 'csv|xlsx|xls', 			'upload_path' => FCPATH . 'storage/uploads/files', 			'max_size' => 2097152,			'overwrite' => True, 			'file_name' =>  'field'		);		$this->upload->initialize($configmain); 		if($this->upload->do_upload('bfield')){  			$data = array('upload_data' => $this->upload->data());								$file=$data['upload_data']['full_path']; 			$reader = new \PhpOffice\PhpSpreadsheet\Reader\Xlsx();			$spreadsheet = $reader->load($file);			$sheetCount = $spreadsheet->getSheetCount();			//echo $sheetCount;			$empdata=$employeeofficedata=$employeedata=$employeshiftdata=$employetimedata=array();			for ($i = 0; $i < $sheetCount; $i++) {				$sheet = $spreadsheet->getSheet($i);				$sheetData = $sheet->toArray(null, true, true, true);								array_shift($sheetData);				//printr($sheetData);				foreach($sheetData as $sheet){					if($i==0){						$paycode=trim($sheet['B']);												$user=$this->users_model->getUserByUsername($paycode);						if($user){							$user_id=$user->id;							$empdata[]=array(								"user_id"=>$user_id,								"paycode"=>$paycode,								"employee_name"=>$user->firstname,								"branch_id"=>$user->branch_id,								"month_days"=>$sheet['D'],								"present_days"=>$sheet['E'],								"absent_days"=>$sheet['F'],								"weekly_off"=>$sheet['G'],								"leave_days"=>$sheet['H'],								"holidays"=>$sheet['I'],								"arrear_days"=>$sheet['J'],								"deduction_days"=>$sheet['K'],								"status"=>1,								"date_added"=>date("Y-m-t", strtotime("01-".$month)),															);						}					}				}			}									foreach($empdata as $edata){				$field=$this->field_model->getFieldByUserID($edata['user_id'],$edata['date_added']);				if($field){					$this->field_model->editField($field->id,$edata);				}else{					$this->field_model->addField($edata);				}			}			$json= array(				'success'=>'Employee field Upload successfully',				'redirect'=>admin_url('salary/field')			);		}else{			$json['error'] = $this->upload->display_errors();		}		echo json_encode($json);    	exit;	}	}/* End of file hmvc.php *//* Location: ./application/widgets/hmvc/controllers/hmvc.php */